generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model examination_room {
  ID              Int     @id @default(autoincrement())
  Name            String? @default("") @db.VarChar(255)
  organization_id Int?    @default(0)
  sound_design_id Int?
  longitude       Float?  @default(0)
  latitude        Float?  @default(0)
}

model register_at {
  ID         Int          @default(autoincrement())
  MemberID   Int
  member     member       @relation("memberRegisterAt", fields: [MemberID], references: [ID])
  organizeId Int
  organize   organization @relation("organizeRegister", fields: [organizeId], references: [ID])

  @@id([ID, MemberID, organizeId])
  @@index([MemberID, organizeId])
}

model member {
  ID              Int           @default(autoincrement())
  Card            Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  organization_id Int?
  HnCode          String?       @default("") @db.VarChar(255)
  username        String?       @db.VarChar(20)
  MobileNo        String?       @unique @default("") @db.VarChar(50)
  password        String?       @db.VarChar(100)
  IsBoss          Boolean?      @default(false)
  Modify_DateTime DateTime?     @db.DateTime(0)
  ThId            String?       @default("\u0000") @db.VarChar(50)
  ThTitle         String?       @db.VarChar(10)
  ThFrist         String?       @db.VarChar(50)
  ThMiddle        String?       @db.VarChar(20)
  ThLast          String?       @db.VarChar(50)
  EnTitle         String?       @db.VarChar(10)
  EnFrist         String?       @db.VarChar(50)
  EnMiddle        String?       @db.VarChar(20)
  EnLast          String?       @db.VarChar(50)
  ThBirth         String?       @db.VarChar(30)
  EnBirth         String?       @db.VarChar(30)
  ThGender        String?       @db.VarChar(10)
  EnGender        String?       @db.VarChar(10)
  Place           String?       @db.VarChar(250)
  ThIssue         String?       @db.VarChar(20)
  EnIssue         String?       @db.VarChar(20)
  ThExpiry        String?       @db.VarChar(20)
  EnExpiry        String?       @db.VarChar(20)
  AddNum          String?       @default("") @db.VarChar(20)
  AddMoo          String?       @default("") @db.VarChar(20)
  AddTok          String?       @db.VarChar(255)
  AddSoi          String?       @db.VarChar(255)
  AddRoad         String?       @db.VarChar(255)
  AddTambol       String?       @db.VarChar(255)
  AddUmper        String?       @db.VarChar(255)
  AddCity         String?       @db.VarChar(255)
  Number          String?       @db.VarChar(20)
  Picture         String?       @db.Text
  queue           queue[]       @relation("memberDetail")
  register_at     register_at[] @relation("memberRegisterAt")

  @@id([ID])
}

model member_token_device {
  id         Int       @id @default(autoincrement())
  member_id  Int?
  platform   String?   @db.VarChar(20)
  fcm_token  String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model organization {
  ID                   Int               @id @default(autoincrement())
  Name                 String?           @default("") @db.VarChar(100)
  Address              String?           @default("") @db.VarChar(250)
  Tel                  String?           @default("") @db.VarChar(50)
  organization_type_id Int
  organizeType         organization_type @relation("organizeType", fields: [organization_type_id], references: [id])
  queue                queue[]           @relation("organizeDetail")
  registerAt           register_at[]     @relation("organizeRegister")
}

model organization_type {
  id                     Int            @id @default(autoincrement())
  organization_type_name String?        @default("") @db.VarChar(255)
  format                 Int?
  organization           organization[] @relation("organizeType")
}

model queue {
  ID              Int           @id @default(autoincrement())
  MemberID        Int
  QueueNo         String?       @default("") @db.VarChar(5)
  CreateDate      DateTime      @db.Date
  ExamRoomID      Int?
  Confirm         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  Reserve         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  ReserveDate     DateTime?     @db.Date
  Modify_DateTime DateTime?     @db.DateTime(0)
  IsUrgentCase    Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  IsPrint         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  organization_id Int
  organize        organization  @relation("organizeDetail", fields: [organization_id], references: [ID])
  queue_detail    queue_detail?
  member          member        @relation("memberDetail", fields: [MemberID], references: [ID])

  @@unique(fields: [CreateDate, MemberID, organization_id], name: "queueOfToDay")
}

model queue_detail {
  ID              Int       @id @default(autoincrement())
  qId             Int?      @unique
  queue           queue?    @relation(fields: [qId], references: [ID], onDelete: Cascade)
  CreateDate      DateTime? @db.Date
  ExamRoomID      Int?
  StartTime       DateTime? @db.DateTime(0)
  EndTime         DateTime? @db.DateTime(0)
  QueueNo         String?   @db.VarChar(5)
  Modify_DateTime DateTime? @db.DateTime(0)
  qNo             Int?      @default(0)
  Success         Boolean?  @default(dbgenerated("b'0'")) @db.Bit(1)
  Calling_Queue   Boolean?  @default(dbgenerated("b'0'")) @db.Bit(1)
  Counter         Int?
  IsSendNotify    Boolean?  @default(false)
}

model queue_type {
  id         Int     @id @default(autoincrement())
  type_name  String? @db.VarChar(100)
  service_id Int?
  detail     String? @db.VarChar(250)
}
