generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model examination_room {
  ID              Int     @id @default(autoincrement())
  Name            String? @default("") @db.VarChar(255)
  organization_id Int?    @default(0)
  sound_design_id Int?
  longitude       Float?  @default(0)
  latitude        Float?  @default(0)
}

model register_at {
  ID         Int          @default(autoincrement())
  MemberID   Int
  organizeId Int
  member     member       @relation("memberRegisterAt", fields: [MemberID], references: [ID])
  organize   organization @relation("organizeRegister", fields: [organizeId], references: [ID])

  @@id([ID, MemberID, organizeId])
  @@index([MemberID, organizeId])
  @@index([organizeId], map: "register_at_organizeId_fkey")
}

model member {
  ID              Int           @id @default(autoincrement())
  Card            Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  organization_id Int?
  HnCode          String?       @default("") @db.VarChar(255)
  username        String?       @db.VarChar(20)
  MobileNo        String?       @unique @default("") @db.VarChar(50)
  password        String?       @db.VarChar(100)
  IsBoss          Boolean?      @default(false)
  Modify_DateTime DateTime?     @db.DateTime(0)
  ThId            String?       @default("\u0000") @db.VarChar(50)
  ThTitle         String?       @db.VarChar(10)
  ThFrist         String?       @db.VarChar(50)
  ThMiddle        String?       @db.VarChar(20)
  ThLast          String?       @db.VarChar(50)
  EnTitle         String?       @db.VarChar(10)
  EnFrist         String?       @db.VarChar(50)
  EnMiddle        String?       @db.VarChar(20)
  EnLast          String?       @db.VarChar(50)
  ThBirth         String?       @db.VarChar(30)
  EnBirth         String?       @db.VarChar(30)
  ThGender        String?       @db.VarChar(10)
  EnGender        String?       @db.VarChar(10)
  Place           String?       @db.VarChar(250)
  ThIssue         String?       @db.VarChar(20)
  EnIssue         String?       @db.VarChar(20)
  ThExpiry        String?       @db.VarChar(20)
  EnExpiry        String?       @db.VarChar(20)
  AddNum          String?       @default("") @db.VarChar(20)
  AddMoo          String?       @default("") @db.VarChar(20)
  AddTok          String?       @db.VarChar(255)
  AddSoi          String?       @db.VarChar(255)
  AddRoad         String?       @db.VarChar(255)
  AddTambol       String?       @db.VarChar(255)
  AddUmper        String?       @db.VarChar(255)
  AddCity         String?       @db.VarChar(255)
  Number          String?       @db.VarChar(20)
  Picture         String?       @db.Text
  queue           queue[]       @relation("memberDetail")
  register_at     register_at[] @relation("memberRegisterAt")
}

model member_token_device {
  id         Int       @id @default(autoincrement())
  member_id  Int?
  platform   String?   @db.VarChar(20)
  fcm_token  String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
}

model organization {
  ID                   Int               @id @default(autoincrement())
  Name                 String?           @default("") @db.VarChar(100)
  Address              String?           @default("") @db.VarChar(250)
  Tel                  String?           @default("") @db.VarChar(50)
  organization_type_id Int
  organizeType         organization_type @relation("organizeType", fields: [organization_type_id], references: [id])
  queue                queue[]           @relation("organizeDetail")
  registerAt           register_at[]     @relation("organizeRegister")

  @@index([organization_type_id], map: "organization_organization_type_id_fkey")
}

model organization_type {
  id                     Int            @id @default(autoincrement())
  organization_type_name String?        @default("") @db.VarChar(255)
  format                 Int?
  organization           organization[] @relation("organizeType")
}

model queue {
  ID              Int           @id @default(autoincrement())
  MemberID        Int
  QueueNo         String?       @default("") @db.VarChar(5)
  CreateDate      DateTime      @db.Date
  ExamRoomID      Int?
  Confirm         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  Reserve         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  ReserveDate     DateTime?     @db.Date
  Modify_DateTime DateTime?     @db.DateTime(0)
  IsUrgentCase    Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  IsPrint         Boolean?      @default(dbgenerated("b'0'")) @db.Bit(1)
  organization_id Int
  member          member        @relation("memberDetail", fields: [MemberID], references: [ID])
  organize        organization  @relation("organizeDetail", fields: [organization_id], references: [ID])
  queue_detail    queue_detail?

  @@unique([CreateDate, MemberID, organization_id], name: "queueOfToDay")
  @@index([MemberID], map: "queue_MemberID_fkey")
  @@index([organization_id], map: "queue_organization_id_fkey")
}

model queue_detail {
  ID              Int       @id @default(autoincrement())
  qId             Int?      @unique
  CreateDate      DateTime? @db.Date
  ExamRoomID      Int?
  StartTime       DateTime? @db.DateTime(0)
  EndTime         DateTime? @db.DateTime(0)
  QueueNo         String?   @db.VarChar(5)
  Modify_DateTime DateTime? @db.DateTime(0)
  qNo             Int?      @default(0)
  Success         Boolean?  @default(dbgenerated("b'0'")) @db.Bit(1)
  Calling_Queue   Boolean?  @default(dbgenerated("b'0'")) @db.Bit(1)
  Counter         Int?
  IsSendNotify    Boolean?  @default(false)
  queue           queue?    @relation(fields: [qId], references: [ID], onDelete: Cascade)
}

model queue_type {
  id         Int     @id @default(autoincrement())
  type_name  String? @db.VarChar(100)
  service_id Int?
  detail     String? @db.VarChar(250)
}

model channel {
  id           Int     @id @default(autoincrement())
  channel_name String? @db.VarChar(255)
}

model days {
  id     Int     @id @default(autoincrement())
  day_th String? @default("") @db.VarChar(30)
  day_en String? @default("") @db.VarChar(30)
}

model display_calling_queue {
  ID               Int      @id @default(autoincrement())
  ExamRoomID       Int
  ShowDateTime     Boolean? @db.Bit(1)
  ShowVdo          Boolean? @db.Bit(1)
  VdoURL           String?  @db.VarChar(255)
  ShowRoomName     Boolean? @db.Bit(1)
  ShowOrderno      Boolean? @db.Bit(1)
  ShowQueueNo      Boolean? @db.Bit(1)
  ShowWaitTime     Boolean? @db.Bit(1)
  ShowUrgentCase   Boolean? @db.Bit(1)
  ShowReserve      Boolean? @db.Bit(1)
  ShowCounter      Boolean? @db.Bit(1)
  RowQty           Int?
  Table_width      Int?
  DateTimeFontSize Int?
  RoomNameFontSize Int?
  RowtheadFontSize Int?
  RowtbodyFontSize Int?
  FontStyle        Int?
}

model employee {
  ID              Int       @id @default(autoincrement())
  IDCard          String?   @db.VarChar(50)
  organization_id Int?
  FirstName       String?   @db.VarChar(50)
  LastName        String?   @db.VarChar(50)
  Address         String?   @db.VarChar(250)
  DateOfBlrth     DateTime? @db.Date
  username        String?   @db.VarChar(20)
  MobileNo        String?   @db.VarChar(10)
  password        String?   @db.VarChar(100)
  Modify_DateTime DateTime? @db.DateTime(0)
}

model font {
  ID   Int     @id @default(autoincrement())
  Name String? @db.VarChar(255)
}

model group {
  id    Int     @id @default(autoincrement())
  group String? @db.VarChar(255)
}

model hardware {
  id              Int     @id @default(autoincrement())
  mc_name         String? @default("") @db.VarChar(255)
  ipaddress       String? @db.VarChar(255)
  port            String? @db.VarChar(255)
  detail          String? @db.VarChar(255)
  sound_design_id Int?
  m_type_id       Int?
  length          Float?  @db.Float
  length_now      Float?  @db.Float
  length_alert    Float?  @db.Float
  speed_id        Int?
  channel_id      Int?
}

model hardware_type {
  id   Int     @id @default(autoincrement())
  type String? @db.VarChar(255)
}

model ipservice {
  id        Int  @id @default(autoincrement())
  mcid      Int?
  q_type_id Int?
}

model manage_queue {
  id      Int  @id @default(autoincrement())
  mode_id Int?
  range1  Int?
  range2  Int?
}

model manage_sound {
  id       Int  @id @default(autoincrement())
  sound_id Int?
  group_id Int?
}

model mode {
  id   Int     @id @default(autoincrement())
  mode String? @db.VarChar(255)
}

model printer_speed {
  id    Int     @id @default(autoincrement())
  name  String? @db.VarChar(255)
  speed Float?
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model program {
  id           Int?
  service_id   Int?
  range1       Int?
  range2       Int?
  service_time Int?
  start_time   String? @db.VarChar(5)
  end_time     String? @db.VarChar(5)
  days_id      Int?

  @@ignore
}

model program_detail {
  id         Int  @id @default(autoincrement())
  program_id Int?
  channel_id Int?
  important  Int? @default(0)
}

model service {
  id           Int     @id @default(autoincrement())
  service_name String? @db.VarChar(255)
  Description  String? @db.VarChar(255)
}

model slip {
  id     Int     @id @default(autoincrement())
  name   String? @db.VarChar(255)
  width  Int?
  height Int?
}

model slip_detail {
  id         Int     @id @default(autoincrement())
  slip_id    Int?
  i_type     Int?
  text       String? @default("") @db.VarChar(255)
  font_name  String? @db.VarChar(255)
  font_size  Int?
  obj_id     Int?
  current_x  Int?
  current_y  Int?
  qr_name    String? @db.VarChar(255)
  qr_size    Int?
  bar_name   String? @db.VarChar(255)
  bar_size   Int?
  pic_name   String? @db.VarChar(255)
  pic_w      Int?
  pic_h      Int?
  pic_base64 String? @db.Text
}

model sound {
  id                Int     @id @default(autoincrement())
  sound             String? @db.VarChar(255)
  path              String? @db.VarChar(255)
  filename          String? @db.VarChar(255)
  sound_type        Int?
  key_sound_mapping String? @db.VarChar(11)
}

model sound_design {
  id            Int     @id @default(autoincrement())
  script_name   String? @default("") @db.VarChar(255)
  script_detail String? @db.Text
}

model sound_design_detail {
  id              Int  @id @default(autoincrement())
  sound_design_id Int?
  sound_id        Int?
  sound_order     Int?
  script_type     Int?
}

model sound_design_setting {
  id              Int  @id
  sound_design_id Int?
  m_key_id        Int?
}

model sound_type {
  id       Int     @id @default(autoincrement())
  language String? @db.VarChar(255)
  gender   Int?
}

model wait_queue {
  id   Int  @id @default(autoincrement())
  wait Int?
}
